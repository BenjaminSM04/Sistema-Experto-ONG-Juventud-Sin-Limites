// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Experto_ONG_Juventud_Sin_Limites.Data;

#nullable disable

namespace SistemaExpertoONGJuventudSinLimites.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolClaim", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioClaim", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioLogin", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UsuarioToken", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Audit.Log", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"));

                    b.Property<string>("ClavePrimaria")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Comentario")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("DatosAnteriores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosNuevos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEventoUtc")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Operacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Origen")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("TransaccionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("UsuarioActorId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.HasIndex("UsuarioActorId");

                    b.ToTable("Logs", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.BI.MetricasProgramaMes", b =>
                {
                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("AnioMes")
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .IsFixedLength();

                    b.Property<int>("ActividadesEjecutadas")
                        .HasColumnType("int");

                    b.Property<int>("ActividadesPlanificadas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PorcAsistenciaProm")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PorcCumplimiento")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("RetrasoPromedioDias")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProgramaId", "AnioMes");

                    b.ToTable("MetricasProgramaMes", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Config.ConfiguracionMotor", b =>
                {
                    b.Property<string>("Clave")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Clave");

                    b.ToTable("ConfiguracionMotor", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Config.ConfiguracionMotorOverride", b =>
                {
                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ProgramaId", "Clave");

                    b.HasIndex("Clave");

                    b.HasIndex("ProgramaId")
                        .HasDatabaseName("IX_ConfigMotorOverride_Programa");

                    b.ToTable("ConfiguracionMotorOverride", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Alerta", b =>
                {
                    b.Property<int>("AlertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertaId"));

                    b.Property<int?>("ActividadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("GeneradaEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<int>("ReglaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResueltaEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ResueltaPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Severidad")
                        .HasColumnType("tinyint");

                    b.HasKey("AlertaId");

                    b.HasIndex("ActividadId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("ReglaId");

                    b.HasIndex("Estado", "Severidad")
                        .HasDatabaseName("IX_Alerta_Estado_Severidad")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("ProgramaId", "ActividadId", "ParticipanteId")
                        .HasDatabaseName("IX_Alerta_Targets")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Alerta", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.DiccionarioObservaciones", b =>
                {
                    b.Property<int>("DiccionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiccionarioId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Ambito")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Expresion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Ponderacion")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("DiccionarioId");

                    b.ToTable("DiccionarioObservaciones", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.DiccionarioObservacionesPrograma", b =>
                {
                    b.Property<int>("DiccionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("DiccionarioId", "ProgramaId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("DiccionarioObservacionesPrograma", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.EjecucionMotor", b =>
                {
                    b.Property<int>("EjecucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EjecucionId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Ambito")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("Errores")
                        .HasColumnType("int");

                    b.Property<int>("Exitos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinUtc")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("InicioUtc")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ResultadoResumen")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("TransaccionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EjecucionId");

                    b.ToTable("EjecucionMotor", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.MatchRegla", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<int?>("ActividadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("EjecucionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("GeneroAlerta")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<int>("ReglaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("MatchId");

                    b.HasIndex("ActividadId");

                    b.HasIndex("EjecucionId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("ReglaId");

                    b.ToTable("MatchRegla", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Regla", b =>
                {
                    b.Property<int>("ReglaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReglaId"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Objetivo")
                        .HasColumnType("tinyint");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Severidad")
                        .HasColumnType("tinyint");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ReglaId");

                    b.HasIndex("Clave")
                        .IsUnique()
                        .HasDatabaseName("UX_Regla_Clave_Unique")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Regla", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.ReglaParametro", b =>
                {
                    b.Property<int>("ReglaParametroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReglaParametroId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("ReglaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("ReglaParametroId");

                    b.HasIndex("ReglaId", "Nombre")
                        .IsUnique()
                        .HasDatabaseName("UX_ReglaParam_Regla_Nombre")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("ReglaParametro", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.ReglaParametroOverride", b =>
                {
                    b.Property<int>("ReglaId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("ReglaId", "ProgramaId", "Nombre");

                    b.HasIndex("ProgramaId");

                    b.ToTable("ReglaParametroOverride", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.RiesgoDetalle", b =>
                {
                    b.Property<int>("RiesgoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RiesgoDetalleId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreFeature")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal>("PesoContribucion")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("RiesgoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("ValorNumerico")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("ValorTexto")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("RiesgoDetalleId");

                    b.HasIndex("RiesgoId");

                    b.ToTable("RiesgoDetalle", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.RiesgoParticipantePrograma", b =>
                {
                    b.Property<int>("RiesgoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RiesgoId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Banda")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("ExplicacionCorta")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaCorte")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("RiesgoId");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("ParticipanteId", "ProgramaId", "FechaCorte")
                        .HasDatabaseName("IX_Riesgo_Part_Prog_Fecha")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("RiesgoParticipantePrograma", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", b =>
                {
                    b.Property<int>("ActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActividadId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lugar")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("ActividadId");

                    b.HasIndex("ProgramaId", "FechaInicio")
                        .HasDatabaseName("IX_Actividad_Programa_Fecha")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Actividad", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.ActividadParticipante", b =>
                {
                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("Rol")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ActividadId", "ParticipanteId");

                    b.HasIndex("ParticipanteId")
                        .HasDatabaseName("IX_AP_Participante")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("ActividadParticipante", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsistenciaId"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Observacion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("AsistenciaId");

                    b.HasIndex("ParticipanteId", "Fecha")
                        .HasDatabaseName("IX_Asistencia_Participante_Fecha")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("ActividadId", "ParticipanteId", "Fecha")
                        .IsUnique()
                        .HasDatabaseName("UX_Asistencia_Act_Part_Fecha")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Asistencia", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.EvidenciaActividad", b =>
                {
                    b.Property<int>("EvidenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvidenciaId"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("ArchivoPath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("SubidoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("SubidoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("EvidenciaId");

                    b.HasIndex("ActividadId", "Tipo")
                        .HasDatabaseName("IX_Evidencia_Actividad")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("EvidenciaActividad", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipanteId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ParticipanteId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Participante", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAArchivo", b =>
                {
                    b.Property<int>("ArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArchivoId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("ArchivoPath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("CampoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("InstanciaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("SubidoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("SubidoPorUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ArchivoId");

                    b.HasIndex("CampoId");

                    b.HasIndex("InstanciaId");

                    b.ToTable("POA_Archivo", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", b =>
                {
                    b.Property<int>("CampoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampoId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Alcance")
                        .HasColumnType("tinyint");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("PlantillaId")
                        .HasColumnType("int");

                    b.Property<bool>("Requerido")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("SeccionId")
                        .HasColumnType("int");

                    b.Property<byte>("TipoDato")
                        .HasColumnType("tinyint");

                    b.Property<string>("Unidad")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CampoId");

                    b.HasIndex("SeccionId");

                    b.HasIndex("PlantillaId", "Clave")
                        .IsUnique()
                        .HasDatabaseName("UX_PCampo_Plantilla_Clave")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("POA_Campo", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampoOpcion", b =>
                {
                    b.Property<int>("OpcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpcionId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("CampoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("OpcionId");

                    b.HasIndex("CampoId");

                    b.ToTable("POA_CampoOpcion", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampoValidacion", b =>
                {
                    b.Property<int>("ValidacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValidacionId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("CampoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("ValidacionId");

                    b.HasIndex("CampoId");

                    b.ToTable("POA_CampoValidacion", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAInstancia", b =>
                {
                    b.Property<int>("InstanciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstanciaId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("PeriodoAnio")
                        .HasColumnType("smallint");

                    b.Property<byte?>("PeriodoMes")
                        .HasColumnType("tinyint");

                    b.Property<int>("PlantillaId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("InstanciaId");

                    b.HasIndex("PlantillaId");

                    b.HasIndex("ProgramaId", "PeriodoAnio", "PeriodoMes")
                        .HasDatabaseName("IX_PInst_Programa_Periodo")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("POA_Instancia", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantilla", b =>
                {
                    b.Property<int>("PlantillaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantillaId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VigenteDesde")
                        .HasColumnType("date");

                    b.Property<DateTime?>("VigenteHasta")
                        .HasColumnType("date");

                    b.HasKey("PlantillaId");

                    b.HasIndex("ProgramaId", "Version")
                        .IsUnique()
                        .HasDatabaseName("UX_Plantilla_Programa_Version")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("POA_Plantilla", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantillaSeccion", b =>
                {
                    b.Property<int>("SeccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeccionId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("PlantillaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("SeccionId");

                    b.HasIndex("PlantillaId");

                    b.ToTable("POA_PlantillaSeccion", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POASnapshotMensual", b =>
                {
                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("AnioMes")
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .IsFixedLength();

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantillaVersion")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProgramaId", "AnioMes");

                    b.ToTable("POA_SnapshotMensual", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAValor", b =>
                {
                    b.Property<int>("ValorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValorId"));

                    b.Property<int?>("ActividadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("CampoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("InstanciaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool?>("ValorBool")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ValorDecimal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("ValorFecha")
                        .HasColumnType("date");

                    b.Property<int?>("ValorNumero")
                        .HasColumnType("int");

                    b.Property<string>("ValorTexto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ValorId");

                    b.HasIndex("ActividadId")
                        .HasDatabaseName("IX_PValor_Actividad")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("CampoId");

                    b.HasIndex("ParticipanteId")
                        .HasDatabaseName("IX_PValor_Participante")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("ProgramaId")
                        .HasDatabaseName("IX_PValor_Programa")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("InstanciaId", "CampoId")
                        .HasDatabaseName("IX_PValor_Target_Inst")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("POA_Valor", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", b =>
                {
                    b.Property<int>("ProgramaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramaId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<bool>("InferenciaActiva")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProgramaId");

                    b.HasIndex("Clave")
                        .IsUnique()
                        .HasDatabaseName("IX_Programa_Clave_Unique")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Programa", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.UsuarioPrograma", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Hasta")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("UsuarioId", "ProgramaId", "Desde");

                    b.HasIndex("ProgramaId")
                        .HasDatabaseName("IX_UsuarioPrograma_Programa")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("IX_UsuarioPrograma_Usuario")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("UsuarioPrograma", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PersonaId");

                    b.ToTable("Persona", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Rol_Nombre_Unique")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Rol", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MustChangePassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Usuario_Email_Unique")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Usuario", "dbo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.UsuarioRol", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ActualizadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AsignadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("EliminadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRol", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Audit.Log", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", "UsuarioActor")
                        .WithMany()
                        .HasForeignKey("UsuarioActorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("UsuarioActor");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.BI.MetricasProgramaMes", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Config.ConfiguracionMotorOverride", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Config.ConfiguracionMotor", "ConfiguracionBase")
                        .WithMany("Overrides")
                        .HasForeignKey("Clave")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ConfiguracionBase");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Alerta", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Regla", "Regla")
                        .WithMany("Alertas")
                        .HasForeignKey("ReglaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Participante");

                    b.Navigation("Programa");

                    b.Navigation("Regla");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.DiccionarioObservacionesPrograma", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.DiccionarioObservaciones", "Diccionario")
                        .WithMany("DiccionarioProgramas")
                        .HasForeignKey("DiccionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Diccionario");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.MatchRegla", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.EjecucionMotor", "Ejecucion")
                        .WithMany("Matches")
                        .HasForeignKey("EjecucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Regla", "Regla")
                        .WithMany("Matches")
                        .HasForeignKey("ReglaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Ejecucion");

                    b.Navigation("Participante");

                    b.Navigation("Programa");

                    b.Navigation("Regla");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.ReglaParametro", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Regla", "Regla")
                        .WithMany("Parametros")
                        .HasForeignKey("ReglaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regla");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.ReglaParametroOverride", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Regla", "Regla")
                        .WithMany("ParametroOverrides")
                        .HasForeignKey("ReglaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");

                    b.Navigation("Regla");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.RiesgoDetalle", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.RiesgoParticipantePrograma", "Riesgo")
                        .WithMany("Detalles")
                        .HasForeignKey("RiesgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Riesgo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.RiesgoParticipantePrograma", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participante");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany("Actividades")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.ActividadParticipante", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", "Actividad")
                        .WithMany("ActividadParticipantes")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "Participante")
                        .WithMany("ActividadParticipantes")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Asistencia", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", "Actividad")
                        .WithMany("Asistencias")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "Participante")
                        .WithMany("Asistencias")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.EvidenciaActividad", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", "Actividad")
                        .WithMany("Evidencias")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Persona", "Persona")
                        .WithOne("Participante")
                        .HasForeignKey("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "PersonaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAArchivo", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", "Campo")
                        .WithMany()
                        .HasForeignKey("CampoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAInstancia", "Instancia")
                        .WithMany("Archivos")
                        .HasForeignKey("InstanciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campo");

                    b.Navigation("Instancia");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantilla", "Plantilla")
                        .WithMany("Campos")
                        .HasForeignKey("PlantillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantillaSeccion", "Seccion")
                        .WithMany("Campos")
                        .HasForeignKey("SeccionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Plantilla");

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampoOpcion", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", "Campo")
                        .WithMany("Opciones")
                        .HasForeignKey("CampoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampoValidacion", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", "Campo")
                        .WithMany("Validaciones")
                        .HasForeignKey("CampoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campo");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAInstancia", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantilla", "Plantilla")
                        .WithMany("Instancias")
                        .HasForeignKey("PlantillaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany("Instancias")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Plantilla");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantilla", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany("Plantillas")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantillaSeccion", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantilla", "Plantilla")
                        .WithMany("Secciones")
                        .HasForeignKey("PlantillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plantilla");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POASnapshotMensual", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAValor", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", "Campo")
                        .WithMany("Valores")
                        .HasForeignKey("CampoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAInstancia", "Instancia")
                        .WithMany("Valores")
                        .HasForeignKey("InstanciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Actividad");

                    b.Navigation("Campo");

                    b.Navigation("Instancia");

                    b.Navigation("Participante");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.UsuarioPrograma", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", "Programa")
                        .WithMany("UsuarioProgramas")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", "Usuario")
                        .WithMany("UsuarioProgramas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", "PersonaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.UsuarioRol", b =>
                {
                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Config.ConfiguracionMotor", b =>
                {
                    b.Navigation("Overrides");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.DiccionarioObservaciones", b =>
                {
                    b.Navigation("DiccionarioProgramas");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.EjecucionMotor", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.Regla", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Matches");

                    b.Navigation("ParametroOverrides");

                    b.Navigation("Parametros");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Motor.RiesgoParticipantePrograma", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Actividad", b =>
                {
                    b.Navigation("ActividadParticipantes");

                    b.Navigation("Asistencias");

                    b.Navigation("Evidencias");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Operacion.Participante", b =>
                {
                    b.Navigation("ActividadParticipantes");

                    b.Navigation("Asistencias");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POACampo", b =>
                {
                    b.Navigation("Opciones");

                    b.Navigation("Validaciones");

                    b.Navigation("Valores");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAInstancia", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("Valores");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantilla", b =>
                {
                    b.Navigation("Campos");

                    b.Navigation("Instancias");

                    b.Navigation("Secciones");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.POA.POAPlantillaSeccion", b =>
                {
                    b.Navigation("Campos");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Programas.Programa", b =>
                {
                    b.Navigation("Actividades");

                    b.Navigation("Instancias");

                    b.Navigation("Plantillas");

                    b.Navigation("UsuarioProgramas");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Persona", b =>
                {
                    b.Navigation("Participante");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Sistema_Experto_ONG_Juventud_Sin_Limites.Domain.Security.Usuario", b =>
                {
                    b.Navigation("UsuarioProgramas");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
